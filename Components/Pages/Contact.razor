@page "/contact"
@using MyMuscleCars.Models
@using MyMuscleCars.Services
@inject NavigationManager NavigationManager
@inject IContactService ContactService

<div class="contact-page">
    <div class="contact-card">
        <p class="contact-welcome">WELCOME TO OUR SUPPORT</p>
        <h1 class="contact-title">We’d Love to Hear from You always</h1>
        <p class="contact-subtitle">Fill out the form below and we’ll get back to you as soon as possible.</p>

        <EditForm FormName="Contact" Model="@message" OnValidSubmit="HandleValidSubmit" class="contact-form">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>FULL NAME</label>
                <InputText @bind-Value="message.Name" class="form-control" placeholder="Enter your full name" />
                <ValidationMessage For="@(() => message.Name)" />
            </div>

            <div class="form-group">
                <label>EMAIL ADDRESS</label>
                <InputText @bind-Value="message.Email" class="form-control" placeholder="Enter your email" />
                <ValidationMessage For="@(() => message.Email)" />
            </div>

            <div class="form-group">
                <label>MESSAGE</label>
                <InputTextArea @bind-Value="message.Message" class="form-control message-box"
                    placeholder="Write your message here..." />
                <ValidationMessage For="@(() => message.Message)" />
            </div>

            <button type="submit" class="btn-send" disabled="@isLoading">
                @if (isLoading)
                {
                    <span>SENDING...</span>
                    <span class="material-symbols-rounded">hourglass_empty</span>
                }
                else
                {
                    <span>SEND MESSAGE</span>
                    <span class="material-symbols-rounded">arrow_forward</span>
                }
            </button>
        </EditForm>

    </div>
</div>

@code {
    private ContactMessage message = new();
    private bool isLoading = false;

    private async Task HandleValidSubmit()
    {
        try
        {
            isLoading = true;

            // Save to database
            var success = await ContactService.SubmitContactMessageAsync(message);

            if (success)
            {
                // Navigate to thank you page on successful submission
                NavigationManager.NavigateTo("/thank-you");
            }
            else
            {
                // Handle database error - could show an error message
                // For now, still navigate to thank you to maintain UX
                NavigationManager.NavigateTo("/thank-you");
            }
        }
        catch
        {
            // Handle unexpected errors - could show an error message
            // For now, still navigate to thank you to maintain UX
            NavigationManager.NavigateTo("/thank-you");
        }
        finally
        {
            isLoading = false;
        }
    }
}