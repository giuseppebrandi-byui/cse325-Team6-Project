@page "/cars/create"
@using MyMuscleCars.Models
@inject MyMuscleCars.Data.AppDbContext Db
@inject NavigationManager Nav

<section class="section">
    <div class="form-container">
        <h2 class="section-title">Add a New Car</h2>
        <p class="section-subtitle">Fill out the form below to add a new vehicle to your inventory.</p>

        <EditForm Model="car" OnValidSubmit="HandleValidSubmit" class="styled-form">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-grid">
                <div class="form-group">
                    <label class="form-label">Make</label>
                    <InputText @bind-Value="car.Make" class="form-input" />
                    <ValidationMessage For="@(() => car.Make)" />
                </div>

                <div class="form-group">
                    <label class="form-label">Model</label>
                    <InputText @bind-Value="car.Model" class="form-input" />
                    <ValidationMessage For="@(() => car.Model)" />
                </div>

                <div class="form-group">
                    <label class="form-label">Year</label>
                    <InputNumber @bind-Value="car.Year" class="form-input" />
                    <ValidationMessage For="@(() => car.Year)" />
                </div>

                <div class="form-group">
                    <label class="form-label">Price</label>
                    <InputNumber @bind-Value="car.Price" class="form-input" />
                    <ValidationMessage For="@(() => car.Price)" />
                </div>

                <div class="form-group">
                    <label class="form-label">Color</label>
                    <InputText @bind-Value="car.Color" class="form-input" />
                </div>

                <div class="form-group form-full">
                    <label class="form-label">Description</label>
                    <InputTextArea @bind-Value="car.Description" class="form-input message-box" />
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="registration-btn save-btn">ðŸ’¾ Save Car <span class="material-symbols-rounded">arrow_forward</span></button>
                <button type="button" class="btn cancel-btn" @onclick="Cancel">Cancel</button>
            </div>
        </EditForm>
    </div>
</section>

@code {
    private Car car = new();

    private async Task HandleValidSubmit()
    {
        Db.Cars.Add(car);
        await Db.SaveChangesAsync();
        Nav.NavigateTo("/cars");
    }

    private void Cancel() => Nav.NavigateTo("/cars");
}
