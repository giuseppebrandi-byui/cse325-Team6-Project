@page "/Error"
@using System.Diagnostics

<PageTitle>Error</PageTitle>

<main class="container text-center error-page">
    <section>
        <h1 class="display-1 text-danger">Error 500</h1>
        <h2 class="mb-4 text-danger">An error occurred while processing your request.</h2>

        @if (ShowRequestId)
        {
            <p>
                <strong>Request ID:</strong> <code>@RequestId</code>
            </p>
        }

        <h3>Development Mode</h3>
        <p>
            Swapping to <strong>Development</strong> environment will display more detailed information about the error
            that
            occurred.
        </p>
        <p>
            <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
            It can result in displaying sensitive information from exceptions to end users.
            For local debugging, enable the <strong>Development</strong> environment by setting the
            <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong> and restarting
            the app.
        </p>

        <a href="/" class="btn btn-primary btn-lg mb-5 d-block mx-auto">Return Home</a>

        <hr class="w-50 mx-auto" />
        <p class="small text-muted mt-3">Please contact the administrator if the problem persists.</p>
    </section>
</main>

<style>
    .error-page {
        min-height: 70vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
    }

    .error-page h1 {
        font-size: 6rem;
        font-weight: 700;
    }

    .error-page h2 {
        font-size: 2rem;
        font-weight: 500;
    }

    .error-page p.lead,
    .error-page p {
        font-size: 1.25rem;
    }

    .error-page a.btn {
        padding: 0.75rem 2rem;
        display: block;
        margin: 0 auto;
    }

    .error-page hr {
        border-top: 2px solid #dee2e6;
    }
</style>

@code {
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
    RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
}