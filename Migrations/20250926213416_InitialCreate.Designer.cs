// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyMuscleCars.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace cse325Team6Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250926213416_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyMuscleCars.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("account_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_type");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_firstname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_password");

                    b.HasKey("Id");

                    b.ToTable("account", (string)null);
                });

            modelBuilder.Entity("MyMuscleCars.Models.Inventory", b =>
                {
                    b.Property<int>("InvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("inv_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InvId"));

                    b.Property<string>("InvColor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inv_color");

                    b.Property<string>("InvDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inv_description");

                    b.Property<string>("InvImage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inv_image");

                    b.Property<string>("InvMake")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inv_make");

                    b.Property<int>("InvMiles")
                        .HasColumnType("integer")
                        .HasColumnName("inv_miles");

                    b.Property<string>("InvModel")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inv_model");

                    b.Property<decimal>("InvPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("inv_price");

                    b.Property<string>("InvThumbnail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inv_thumbnail");

                    b.Property<string>("InvYear")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inv_year");

                    b.Property<int>("MakeId")
                        .HasColumnType("integer")
                        .HasColumnName("make_id");

                    b.HasKey("InvId");

                    b.HasIndex("MakeId");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("MyMuscleCars.Models.Make", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("make_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("make_name");

                    b.HasKey("Id");

                    b.ToTable("make", (string)null);
                });

            modelBuilder.Entity("MyMuscleCars.Models.Inventory", b =>
                {
                    b.HasOne("MyMuscleCars.Models.Make", "MakeRef")
                        .WithMany("Inventories")
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MakeRef");
                });

            modelBuilder.Entity("MyMuscleCars.Models.Make", b =>
                {
                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
